// Code generated by ogen, DO NOT EDIT.

package ogen

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// APIMicropostsCountGet implements GET /api/microposts/count operation.
	//
	// 登録されているマイクロポストの総数を返します。.
	//
	// GET /api/microposts/count
	APIMicropostsCountGet(ctx context.Context) (APIMicropostsCountGetRes, error)
	// APIMicropostsGet implements GET /api/microposts operation.
	//
	// 登録されているすべてのマイクロポストの一覧を返します。.
	//
	// GET /api/microposts
	APIMicropostsGet(ctx context.Context) (APIMicropostsGetRes, error)
	// APIUsersCountGet implements GET /api/users/count operation.
	//
	// 登録されているユーザーの総数を返します。.
	//
	// GET /api/users/count
	APIUsersCountGet(ctx context.Context) (APIUsersCountGetRes, error)
	// APIUsersGet implements GET /api/users operation.
	//
	// 登録されているすべてのユーザーの一覧を返します。.
	//
	// GET /api/users
	APIUsersGet(ctx context.Context) (APIUsersGetRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
